
// sol 1
const hammingWeight = (n) => {
  return n.toString(2).split("0").join("").length
}


console.log(hammingWeight(111111111111111111111111111111101));


// solution 2

const hammingWeight2 = (n) => {
    const toStr = n.toString(2)
    const res = [];

    for (let j = 0; j <=  toStr.length - 1; j++) {
        if (toStr[j] !== "0") {
            res.push(toStr[j])
        }
    }
    return res.length
}


console.log(hammingWeight2(111111111111111111111111111111101));

//Напишите функцию, которая принимает двоичное представление целого числа без знака и возвращает количество имеющихся у него битов «1» (также известное как вес Хэмминга ) .
//
// Примечание:
//
// Обратите внимание, что в некоторых языках, например в Java, не существует беззнакового целочисленного типа. В этом случае входные данные будут представлены как целочисленный тип со знаком. Это не должно повлиять на вашу реализацию, поскольку внутреннее двоичное представление целого числа одинаково, независимо от того, подписано оно или нет.
// В Java компилятор представляет целые числа со знаком, используя обозначение дополнения до 2 . Следовательно, в примере 3 входные данные представляют целое число со знаком. -3.
//